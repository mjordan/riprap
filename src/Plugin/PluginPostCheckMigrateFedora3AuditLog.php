<?php
// src/Plugin/PluginPostCheckMigrateFedora3AuditLog.php

/**
 * This Riprap plugin provides a way to migrate fixity events from a
 * Fedora 3.x repository. It assumes that resources migrated from Fedora 3.x to
 * Fedora 5 include the AUDIT datastream. The plugin is not needed after the
 * fixity events in the AUDIT datastreams for all resources have been persisted
 * to Riprap; when this is achieved the plugin can be disabled.
 *
 *
 */
namespace App\Plugin;

class PluginPostCheckMigrateFedora3AuditLog extends AbstractPostCheckPlugin
{
    public function execute($event)
    {
        // How do we know which AUDIT binary resource we want to parse? If the resource ID
        // contains the pattern "_AUDIT_", parse the resource ID to get the object's PID.
        // Knowing this, 

        // Note that in production, we would be using only the AUDIT datastream,
        // not the entire FOXML. See https://github.com/Islandora-CLAW/CLAW/issues/917.
        $xml = simplexml_load_file('resources/foxml.xml');
        $xml->registerXPathNamespace('audit', 'info:fedora/fedora-system:def/audit#');
        $records = $xml->xpath('//audit:record');

        $fixity_events = array();
        foreach ($records as $record) {
            $timestamp = $record->xpath('./audit:date')[0];
            $details = $record->xpath('./audit:justification')[0];
            if (strlen($details)) {
                $event_parts = explode(';', $details);
                if (isset($event_parts[1]) &&
                    isset($event_parts[2]) &&
                    trim($event_parts[1]) == 'PREMIS:eventType=fixity check') {
                    $timestamp = (string) $timestamp;
                    $fixity_events[$timestamp] = array(trim($event_parts[0]), trim($event_parts[2]));
                }
            }
        }      

        # For the current resource, retrieve the binary resource containing its Fedora 3.x AUDIT datastream.
        # Parse out the audit records (XPath $audit_xml->xpath('//audit:record').
        # For each record
            # Get its timestamp (XPath $record->xpath('./audit:date')[0]).
            # Get its justtfication (XPath $record->xpath('./audit:justification')[0]).
            # If the record's justification is 'PREMIS:eventType=fixity check', get the digest algorithm and event outcome from the justification.
            # Persist the record to Riprap's database.

            # Fixity events generated by Islandora's Checksum Checker module do not contain a digest value.
            # We will need to account for that when persisting these events.
        // phpcs:enable
    }
}
